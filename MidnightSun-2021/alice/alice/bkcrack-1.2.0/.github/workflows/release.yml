name: Release

on:
  push:
    tags:
      - v*

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      if: runner.os == 'macOS'
      run: brew install libomp

    - name: Configure CMake
      run: cmake -S . -B build

    - name: Build project
      run: cmake --build build --config Release

    - name: Create package
      run: cmake --build build --config Release --target package

    - name: Upload package
      uses: actions/upload-artifact@v2
      with:
        name: package-${{ matrix.os }}
        path: |
          build/*.zip
          build/*.tar.gz

  create:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}

    steps:
    - name: Create release
      id: create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}

  upload:
    runs-on: ubuntu-latest
    needs: create

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Download package
      uses: actions/download-artifact@v2
      with:
        name: package-${{ matrix.os }}
        path: package

    - name: Get package filename
      id: package-filename
      run: echo ::set-output name=filename::$(basename package/*)

    - name: Upload package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create.outputs.upload_url }}
        asset_name: ${{ steps.package-filename.outputs.filename }}
        asset_path: package/${{ steps.package-filename.outputs.filename }}
        asset_content_type: application/octet-stream
